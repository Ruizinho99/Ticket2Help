<Window x:Class="UI.Views.ResponderTickets"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Responder Tickets" WindowStartupLocation="CenterScreen"
         WindowState="Maximized"
        Background="#FAFAFA"
        FontFamily="Segoe UI"
        FontSize="14"
        KeyboardNavigation.TabNavigation="Cycle">

    <Window.Resources>
        <Style x:Key="LogoutButton" TargetType="Button">
            <Setter Property="Background" Value="#D9534F"/>
            <!-- vermelho bootstrap -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#C9302C"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#AC2925"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#E6A9A8"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Estilo botões primários -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#004578"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#A6A6A6"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo botão secundário -->
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Background" Value="#6C757D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5A6268"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#4E555B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#B0B5B9"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para TextBlock de labels -->
        <Style TargetType="TextBlock" x:Key="LabelTextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Estilo DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#F9F9F9"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>
    </Window.Resources>

    <Grid Margin="15">
        <!-- Menu Inicial -->
        <StackPanel x:Name="MainMenu" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible" Width="220">
            <Button Content="Responder Tickets" Style="{StaticResource PrimaryButton}" Height="42" Click="BtnResponderTickets_Click" AutomationProperties.Name="Botão Responder Tickets"/>
            <Button Content="Ver Mapas" Style="{StaticResource PrimaryButton}" Height="42" Click="BtnVerMapas_Click" AutomationProperties.Name="Botão Ver Mapas"/>
            <Button Content="Logout" Style="{StaticResource LogoutButton}" Height="42" Click="BtnLogout_Click" AutomationProperties.Name="Botão Logout"/>

        </StackPanel>

        <!-- Responder Tickets -->
        <StackPanel x:Name="ResponderSection" Visibility="Collapsed" Margin="0,0,0,0">
            <!-- Filtros -->
            <GroupBox Header="Filtros" Margin="0,0,0,10" Padding="15">
                <StackPanel Orientation="Vertical" >

                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Tipo:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroTipo" Width="150" SelectedIndex="0" 
                                  AutomationProperties.Name="Filtro Tipo">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>Hardware</ComboBoxItem>
                            <ComboBoxItem>Software</ComboBoxItem>
                        </ComboBox>

                        <TextBlock Text="Prioridade:" Width="90" Margin="20,0,0,0" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroPrioridade" Width="150" SelectedIndex="0" 
                                  AutomationProperties.Name="Filtro Prioridade">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>Baixa</ComboBoxItem>
                            <ComboBoxItem>Média</ComboBoxItem>
                            <ComboBoxItem>Alta</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Estado Ticket:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroEstadoTicket" Width="150" SelectedIndex="0"
                                  AutomationProperties.Name="Filtro Estado Ticket">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>porAtender</ComboBoxItem>
                            <ComboBoxItem>emAtendimento</ComboBoxItem>
                            <ComboBoxItem>atendido</ComboBoxItem>
                        </ComboBox>

                        <TextBlock Text="Estado Atendimento:" Width="140" Margin="20,0,0,0" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroEstadoAtendimento" Width="150" SelectedIndex="0"
                                  AutomationProperties.Name="Filtro Estado Atendimento">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>aberto</ComboBoxItem>
                            <ComboBoxItem>naoResolvido</ComboBoxItem>
                            <ComboBoxItem>resolvido</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Data Início:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <DatePicker x:Name="dpDataInicio" Width="150" AutomationProperties.Name="Filtro Data Início"/>

                        <TextBlock Text="Data Fim:" Width="90" Margin="20,0,0,0" Style="{StaticResource LabelTextBlock}" />
                        <DatePicker x:Name="dpDataFim" Width="150" AutomationProperties.Name="Filtro Data Fim"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="0,0,0,15" VerticalAlignment="Center">
                        <TextBlock Text="Ordenar Por:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbOrdenarPor" Width="320" SelectedIndex="3" AutomationProperties.Name="Filtro Ordenar Por">
                            <ComboBoxItem>ID Ascendente</ComboBoxItem>
                            <ComboBoxItem>ID Descendente</ComboBoxItem>
                            <ComboBoxItem>Data Ascendente</ComboBoxItem>
                            <ComboBoxItem>Data Descendente</ComboBoxItem>
                        </ComboBox>

                        <Button Content="Aplicar Filtros" Style="{StaticResource PrimaryButton}" Width="140" Margin="20,0,0,0" Click="BtnAplicarFiltros_Click" AutomationProperties.Name="Botão Aplicar Filtros"/>
                    </StackPanel>

                </StackPanel>
            </GroupBox>

            <!-- DataGrid Tickets -->
            <DataGrid x:Name="dgTicketsResponder" AutoGenerateColumns="False" Height="300" Margin="0,0,0,10" MouseDoubleClick="dgTicketsResponder_MouseDoubleClick"
                      AutomationProperties.Name="Tabela de Tickets para Responder" 
                      KeyboardNavigation.TabIndex="0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="40" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Tipo" Binding="{Binding Tipo}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Subtipo" Binding="{Binding SubtipoProblema}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Prioridade" Binding="{Binding Prioridade}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Descrição" Binding="{Binding Descricao}" Width="200" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Estado Ticket" Binding="{Binding EstadoTicket}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Estado Atendimento" Binding="{Binding EstadoAtendimento}" Width="120" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Data Criação" Binding="{Binding DataCriacao, StringFormat={}{0:dd/MM/yyyy HH:mm}}" Width="120" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Data Atendimento" Binding="{Binding DataAtendimento, StringFormat={}{0:dd/MM/yyyy HH:mm}}" Width="130" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Data Conclusão" Binding="{Binding DataConclusao, StringFormat={}{0:dd/MM/yyyy HH:mm}}" Width="130" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Funcionário" Binding="{Binding NomeFuncionario}" Width="150" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Detalhes Técnico" Binding="{Binding DetalhesTecnico}" Width="200" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Botão Voltar -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Voltar" Style="{StaticResource SecondaryButton}" Width="120" Click="BtnVoltar_Click" AutomationProperties.Name="Botão Voltar"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
