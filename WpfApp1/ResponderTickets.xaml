<!--!
    \file ResponderTickets.xaml
    \brief Janela principal para responder tickets com filtros e listagem.

    Esta janela exibe um menu inicial para navegação e uma seção para
    aplicar filtros, visualizar tickets e interagir com eles.
    @author Paulo
-->
    
    <Window x:Class="UI.Views.ResponderTickets"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Responder Tickets" WindowStartupLocation="CenterScreen"
         WindowState="Maximized"
        Background="#FAFAFA"
        FontFamily="Segoe UI"
        FontSize="14"
        KeyboardNavigation.TabNavigation="Cycle">
    <!--!
        \brief Recursos da janela contendo estilos e templates personalizados.

        Inclui template para ToggleButton do ComboBox, estilos para ComboBox,
        botões (logout, primário, secundário), TextBlock para labels e DataGrid.
    -->
    <Window.Resources>
        <!--!
            \brief Template personalizado para ToggleButton do ComboBox.

            Controla a aparência da seta, estado ao passar o mouse,
            estado clicado e desabilitado.
        -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border x:Name="Border"
      Background="Transparent"
      BorderBrush="Transparent"
      BorderThickness="1"
      Padding="5">
                <Path x:Name="Arrow"
        Data="M 0 0 L 4 4 L 8 0 Z"
        Fill="#666"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Arrow" Property="Fill" Value="#007ACC"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Arrow" Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="180" CenterX="4" CenterY="2"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Arrow" Property="Fill" Value="#AAA"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--!
            \brief Estilo moderno para ComboBox com bordas arredondadas e popup personalizado.
        -->
        <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Borda visível e arredondada -->
                            <Border x:Name="MainBorder"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="6"
                      SnapsToDevicePixels="True">
                                <Grid>
                                    <!-- ToggleButton -->
                                    <ToggleButton x:Name="ToggleButton"
                                    Template="{StaticResource ComboBoxToggleButton}"
                                    Focusable="False"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Width="20"
                                    Margin="0,0,5,0"/>

                                    <!-- Item Selecionado -->
                                    <ContentPresenter x:Name="ContentSite"
                                        Margin="10,4,30,4"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        IsHitTestVisible="False"/>

                                </Grid>
                            </Border>

                            <!-- Popup -->
                            <Popup x:Name="PART_Popup"
                     Placement="Bottom"
                     IsOpen="{TemplateBinding IsDropDownOpen}"
                     AllowsTransparency="True"
                     Focusable="False"
                     PopupAnimation="Slide">
                                <Border x:Name="PopupBorder"
                          Background="White"
                          BorderBrush="#CCCCCC"
                          BorderThickness="1"
                          CornerRadius="6"
                          SnapsToDevicePixels="True"
                          Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                          >
                                    <ScrollViewer Margin="4"
                                    SnapsToDevicePixels="True"
                                    CanContentScroll="True">
                                        <StackPanel IsItemsHost="True"
                                      KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <!-- Efeitos Visuais -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="#007ACC"/>
                                <Setter TargetName="MainBorder" Property="Background" Value="#F0F8FF"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="#007ACC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--!
            \brief Estilo para botão de logout.

            Botão vermelho com aparência semelhante ao Bootstrap.
        -->
        <Style x:Key="LogoutButton" TargetType="Button">
            <Setter Property="Background" Value="#D9534F"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#C9302C"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#AC2925"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#E6A9A8"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--!
            \brief Estilo para botões primários.

            Botões azuis usados para ações principais.
        -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#004578"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#A6A6A6"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--!
            \brief Estilo para botões secundários.

            Baseado no PrimaryButton com cor cinza para ações secundárias.
        -->
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Background" Value="#6C757D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5A6268"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#4E555B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#B0B5B9"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--!
            \brief Estilo para TextBlock utilizado em labels.

            Define peso da fonte e alinhamento vertical.
        -->
        <Style TargetType="TextBlock" x:Key="LabelTextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!--!
            \brief Estilo para DataGrid.

            Configura aparência, alternância de linhas e comportamento de seleção.
        -->
        <Style TargetType="DataGrid">
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#F9F9F9"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>
    </Window.Resources>
    <!--!
        \brief Layout principal da janela.

        Grid com margem que contém as seções da interface.
    -->
    <Grid Margin="15">
        <!--!
            \brief Menu inicial com botões para navegar entre funcionalidades.

            Contém botões para responder tickets, ver mapas e logout.
        -->
        <StackPanel x:Name="MainMenu" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible" Width="220" >
            <Button Content="Responder Tickets" Style="{StaticResource PrimaryButton}" Height="42" Click="BtnResponderTickets_Click" AutomationProperties.Name="Botão Responder Tickets"/>
            <Button Content="Ver Mapas" Style="{StaticResource PrimaryButton}" Height="42" Click="BtnVerMapas_Click" AutomationProperties.Name="Botão Ver Mapas"/>
            <Button Content="Logout" Style="{StaticResource LogoutButton}" Height="42" Click="BtnLogout_Click" AutomationProperties.Name="Botão Logout"/>
        </StackPanel>
        <!--!
            \brief Seção para responder tickets.

            Inicialmente oculta, esta seção apresenta filtros,
            listagem de tickets em cartões e botão para voltar.
        -->
        <StackPanel x:Name="ResponderSection" Visibility="Collapsed" Margin="0,0,0,0">
            <!--!
                \brief Grupo de filtros para pesquisa de tickets.

                Contém filtros para tipo, prioridade, estado, data e ordenação,
                além do botão para aplicar os filtros.
            -->
            <GroupBox Header="Filtros" Margin="0,0,0,10" Padding="15">
                <StackPanel Orientation="Vertical">
                    <!--!
                        \brief Linha 1 dos filtros: Tipo e Prioridade.
                    -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Tipo:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroTipo" Width="150" SelectedIndex="0"
                              AutomationProperties.Name="Filtro Tipo"
                              Style="{StaticResource ModernComboBoxStyle}">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>Hardware</ComboBoxItem>
                            <ComboBoxItem>Software</ComboBoxItem>
                        </ComboBox>

                        <TextBlock Text="Prioridade:" Width="90" Margin="20,0,0,0" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroPrioridade" Width="150" SelectedIndex="0"
                              AutomationProperties.Name="Filtro Prioridade"
                              Style="{StaticResource ModernComboBoxStyle}">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>Baixa</ComboBoxItem>
                            <ComboBoxItem>Média</ComboBoxItem>
                            <ComboBoxItem>Alta</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <!--!
                        \brief Linha 2 dos filtros: Estado do Ticket e Estado de Atendimento.
                    -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Estado Ticket:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroEstadoTicket" Width="150" SelectedIndex="0"
                              AutomationProperties.Name="Filtro Estado Ticket"
                              Style="{StaticResource ModernComboBoxStyle}">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>porAtender</ComboBoxItem>
                            <ComboBoxItem>emAtendimento</ComboBoxItem>
                            <ComboBoxItem>atendido</ComboBoxItem>
                        </ComboBox>

                        <TextBlock Text="Estado Atendimento:" Width="140" Margin="20,0,0,0" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbFiltroEstadoAtendimento" Width="150" SelectedIndex="0"
                              AutomationProperties.Name="Filtro Estado Atendimento"
                              Style="{StaticResource ModernComboBoxStyle}">
                            <ComboBoxItem>Todos</ComboBoxItem>
                            <ComboBoxItem>aberto</ComboBoxItem>
                            <ComboBoxItem>naoResolvido</ComboBoxItem>
                            <ComboBoxItem>resolvido</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <!--!
                        \brief Linha 3 dos filtros: Data Início e Data Fim.
                    -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Data Início:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <DatePicker x:Name="dpDataInicio" Width="150" AutomationProperties.Name="Filtro Data Início"/>

                        <TextBlock Text="Data Fim:" Width="90" Margin="20,0,0,0" Style="{StaticResource LabelTextBlock}" />
                        <DatePicker x:Name="dpDataFim" Width="150" AutomationProperties.Name="Filtro Data Fim"/>
                    </StackPanel>
                    <!--!
                        \brief Linha 4 dos filtros: Ordenar Por e botão Aplicar Filtros.
                    -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,15" VerticalAlignment="Center">
                        <TextBlock Text="Ordenar Por:" Width="90" Style="{StaticResource LabelTextBlock}" />
                        <ComboBox x:Name="cbOrdenarPor" Width="320" SelectedIndex="3"
                              AutomationProperties.Name="Filtro Ordenar Por"
                              Style="{StaticResource ModernComboBoxStyle}">
                            <ComboBoxItem>ID Ascendente</ComboBoxItem>
                            <ComboBoxItem>ID Descendente</ComboBoxItem>
                            <ComboBoxItem>Data Ascendente</ComboBoxItem>
                            <ComboBoxItem>Data Descendente</ComboBoxItem>
                        </ComboBox>

                        <Button Content="Aplicar Filtros" Style="{StaticResource PrimaryButton}" Width="140" Margin="20,0,0,0"
                            Click="BtnAplicarFiltros_Click" AutomationProperties.Name="Botão Aplicar Filtros"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <!--!
                \brief Área para exibir os tickets como cartões em painel de rolagem.

                WrapPanel organiza os cartões, ScrollViewer permite rolagem vertical.
            -->
            <ScrollViewer Height="500" VerticalScrollBarVisibility="Auto" Margin="0,0,0,10">
                <WrapPanel x:Name="TicketsPanel" ItemWidth="250" ItemHeight="Auto" Margin="10" />
            </ScrollViewer>

            <!--!
                \brief Botão para voltar ao menu inicial.

                Botão com estilo secundário posicionado no canto direito.
            -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Voltar" Style="{StaticResource SecondaryButton}" Width="120" Click="BtnVoltar_Click" AutomationProperties.Name="Botão Voltar"/>
            </StackPanel>
        </StackPanel>
    </Grid>


</Window>