<Window x:Class="UI.Views.ResponderTicketDetalhes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Responder Ticket" Height="400" Width="520" WindowStartupLocation="CenterOwner"
        Background="#FAFAFA"
        FontFamily="Segoe UI"
        FontSize="14"
        KeyboardNavigation.TabNavigation="Cycle">

    <Window.Resources>
        <!-- ToggleButton para o ComboBox -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border x:Name="Border"
  Background="Transparent"
  BorderBrush="Transparent"
  BorderThickness="1"
  Padding="5">
                <Path x:Name="Arrow"
    Data="M 0 0 L 4 4 L 8 0 Z"
    Fill="#666"
    HorizontalAlignment="Center"
    VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Arrow" Property="Fill" Value="#007ACC"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Arrow" Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="180" CenterX="4" CenterY="2"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Arrow" Property="Fill" Value="#AAA"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Estilo completo -->
        <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Borda visível e arredondada -->
                            <Border x:Name="MainBorder"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="6"
                  SnapsToDevicePixels="True">
                                <Grid>
                                    <!-- ToggleButton -->
                                    <ToggleButton x:Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Width="20"
                                Margin="0,0,5,0"/>

                                    <!-- Item Selecionado -->
                                    <ContentPresenter x:Name="ContentSite"
                                    Margin="10,4,30,4"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False"/>

                                </Grid>
                            </Border>

                            <!-- Popup -->
                            <Popup x:Name="PART_Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                                <Border x:Name="PopupBorder"
                      Background="White"
                      BorderBrush="#CCCCCC"
                      BorderThickness="1"
                      CornerRadius="6"
                      SnapsToDevicePixels="True"
                      Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                      >
                                    <ScrollViewer Margin="4"
                                SnapsToDevicePixels="True"
                                CanContentScroll="True">
                                        <StackPanel IsItemsHost="True"
                                  KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <!-- Efeitos Visuais -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="#007ACC"/>
                                <Setter TargetName="MainBorder" Property="Background" Value="#F0F8FF"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="#007ACC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Estilo botões primários -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#004578"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#A6A6A6"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo botão vermelho para cancelar -->
        <Style x:Key="DangerButton" TargetType="Button">
            <Setter Property="Background" Value="#D9534F"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#C9302C"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#A52A23"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#E6A9A8"/>
                                <Setter Property="Foreground" Value="#8B0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo TextBox multiline com foco destacado -->
        <Style TargetType="TextBox" x:Key="MultilineTextBoxStyle">
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#007ACC"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#EEE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Responder ao Ticket" FontSize="20" FontWeight="Bold" Margin="0 0 0 15" 
                   AutomationProperties.Name="Título da janela"/>

        <!-- Estado do Ticket -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0 0 0 15" VerticalAlignment="Center">
            <Label Content="Estado do Ticket:" Target="{Binding ElementName=cmbEstadoTicket}" 
           VerticalAlignment="Center" FontWeight="SemiBold" Margin="0 0 10 0" />
            <ComboBox x:Name="cmbEstadoTicket" Width="180" SelectedIndex="0"
              ToolTip="Selecione o estado atual do ticket"
              KeyboardNavigation.TabIndex="0"
              AutomationProperties.Name="Estado do Ticket"
              Style="{StaticResource ModernComboBoxStyle}">
                <ComboBoxItem Content="porAtender" />
                <ComboBoxItem Content="emAtendimento" />
                <ComboBoxItem Content="atendido" />
            </ComboBox>
        </StackPanel>


        <!-- Campo de Resposta -->
        <StackPanel Grid.Row="2" Margin="0 0 0 15">
            <Label Content="Resposta:" Target="{Binding ElementName=txtResposta}" 
                   FontWeight="SemiBold" Margin="0 0 0 5"/>
            <TextBox x:Name="txtResposta" Height="150" Style="{StaticResource MultilineTextBoxStyle}"
                     KeyboardNavigation.TabIndex="1"
                     ToolTip="Digite sua resposta para o ticket"
                     AutomationProperties.Name="Campo de resposta"/>
        </StackPanel>

        <!-- Botões -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Guardar" Style="{StaticResource PrimaryButton}" Width="90" Click="Guardar_Click" KeyboardNavigation.TabIndex="2" ToolTip="Salvar resposta" AutomationProperties.Name="Botão Guardar"/>
            <Button Content="Cancelar" Style="{StaticResource DangerButton}" Width="90" Click="Cancelar_Click" KeyboardNavigation.TabIndex="3" ToolTip="Cancelar e fechar janela" AutomationProperties.Name="Botão Cancelar"/>
        </StackPanel>
    </Grid>
</Window>

